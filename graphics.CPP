
#include<stdio.h>
#include<graphics.h>
#include<conio.h>
#include<dos.h>
#include<stdlib.h>

int main()
{
  clrscr();
  int gd=DETECT,gm;
  int i,j,p,q,x,y,k,flag,ch,a,b;
  initgraph(&gd,&gm,"C:\\TURBOC3\\BGI");
  settextstyle(3,0,3);
  outtextxy(90,150,"*******THE THIRSTY CROW*******");
  getch();
  y=getmaxy()/2;
  i=0;p=0;q=0;j=0;
  flag=0;
  setcolor(YELLOW);
  for(k=0;k<500;k++)
  putpixel(random(700),random(419),15);
  while(!kbhit())
  {
    line(0+i,y+20,0+i,y-20);
    line(0+i,y+20,20+i,y);
    line(0+i,y-20,20+i,y);
    ellipse(80+i,y,10-p,350+p,50,10);
    ellipse(80+i,y,10-p,350+p,40,10);
    ellipse(80+i,y,10-p,350+p,30,10);
    ellipse(80+i,y,10-p,350+p,20,10);
    ellipse(80+i,y,10-p,350+p,10,10);
    line(130+i,y-12,130+i,y+1);
    line(125+i,y-20,125+i,y-5);
    line(135+i,y-18,140+i,y+10);
    line(35+i,y+15,55+i,y+10);
    line(40+i,y+20,55+i,y+10);
    if(flag==0)
    p=p+2;
    if(flag==1)
    p=p-2;
    circle(130+i,y-18,6);
    circle(130+i,y-18,1);
    line(60+i,y-25,30+i,y-45+j);
    line(30+i,y-45+j,100+i,y-25);
    line(60+i,y+25,30+i,y+45+q);
    line(30+i,y+45+q,100+i,y+25);
    i=i+3;
    if(i>638)
    i=0;
    if(flag==1)
     j=j+2,q=q-2;
    if(j<=-10)
     flag=1;
    else if(j>=0)
    flag=0;
    delay(100);
  cleardevice();
  line(100,10,0,150);
  line(100,10,180,150);
  line(180,150,270,10);
  line(270,10,360,150);
  line(360,150,450,10);
  line(450,10,510,150);
  line(510,150,600,10);
  line(0,450,645,450);
  arc(180,95,0,180,30);
  line(170,65,170,40);
  line(160,75,160,30);
  line(152.5,80,152.5,45);
  line(182,65,182,30);
  line(190,65,190,40);
  line(198.5,75,198.5,35);
  line(210,95,210,50);
 }
  getch();

  cleardevice();
  for(k=0;k<500;k++)
  putpixel(random(700),random(419),15);
  while(!kbhit())
  {
  line(0+i,y+20,0+i,y-20);
  line(0+i,y+20,20+i,y);
  line(0+i,y-20,20+i,y);
  ellipse(80+i,y,10-p,350+p,50,10);
  ellipse(80+i,y,10-p,350+p,40,10);
  ellipse(80+i,y,10-p,350+p,30,10);
  ellipse(80+i,y,10-p,350+p,20,10);
  ellipse(80+i,y,10-p,350+p,10,10);
  line(130+i,y-12,130+i,y+1);
  line(125+i,y-20,125+i,y-5);
  line(135+i,y-18,140+i,y+10);
  line(35+i,y+15,55+i,y+10);
  line(40+i,y+20,55+i,y+10);
  if(flag==0)
  p=p+2;
  if(flag==1)
  p=p-2;
  circle(130+i,y-18,6);
  circle(130+i,y-18,1);
  line(60+i,y-25,30+i,y-45+j);
  line(30+i,y-45+j,100+i,y-25);
  line(60+i,y+25,30+i,y+45+q);
  line(30+i,y+45+q,100+i,y+25);
  i=i+3;
  if(i>638)
   i=0;
  if(flag==1)
   j=j+2,q=q-2;
  if(j<=-10)
   flag=1;
  else if(j>=0)
   flag=0;
   line(0,450,645,450);
   circle(345,50,40);
   delay(100);
    cleardevice();
 }
  getch();
  cleardevice();
  for(k=0;k<500;k++)
  putpixel(random(700),random(419),15);

 for(a=20;a<=60;a++)
 {

    line(0+a,y+20,0+a,y-20);
    line(0+a,y+20,20+a,y);
    line(0+a,y-20,20+a,y);
    ellipse(80+a,y,10-p+a,350+p,50,10);
    ellipse(80+a,y,10-p+a,350+p,40,10);
    ellipse(80+a,y,10-p+a,350+p,30,10);
    ellipse(80+a,y,10-p+a,350+p,20,10);
    ellipse(80+a,y,10-p+a,350+p,10,10);
    line(130+a,y-12,130+a,y+1);
    line(125+a,y-20,125+a,y-5);
    line(135+a,y-18,140+a,y+10);
    line(35+a,y+15,55+a,y+10);
    line(40+a,y+20,55+a,y+10);
    if(flag==0)
    p=p+2;
    if(flag==1)
    p=p-2;
    circle(130+a,y-18,6);
    circle(130+a,y-18,1);
    line(60+a,y-25,30+a,y-45+j);
    line(30+a,y-45+j,100+a,y-25);
    line(60+a,y+25,30+a,y+45);
    line(30+a,y+45,100+a,y+25);
    i=i+3;
    if(i>638)
    i=0;
    if(flag==1)
    j=j+2,q=q-2;
    if(j<=10)
    flag=1;
    else if(j>=0)
    flag=0;
   for(a=20;a<=138;a++)
   {
    delay(100);
    cleardevice();
   line(0+i,y+20+a,0+i,y-20+a);
   line(0+i,y+20+a,20+i,y+20+a);
   line(0+i,y-20+a,20+i,y+a);
   ellipse(80+i,y+a,10-p,350+p+a,50,10);
   ellipse(80+i,y+a,10-p,350+p+a,40,10);
   ellipse(80+i,y+a,10-p,350+p+a,30,10);
   ellipse(80+i,y+a,10-p,350+p+a,20,10);
   ellipse(80+i,y+a,10-p,350+p+a,10,10);
   line(130+i,y-12+a,130+i,y+1+a);
   line(125+i,y-20+a,125+i,y-5+a);
   line(135+i,y-18+a,140+i,y+10+a);
   line(35+i,y+15+a,55+i,y+10+a);
   line(40+i,y+20+a,55+i,y+10+a);
   if(flag==0)
      p=p+2;
   if(flag==1)
      p=p-2;
   circle(130+i,y-18+a,6);
   circle(130+i,y-18+a,1);
   line(60+i,y-25+a,30+i,y-45+j+a);
   line(30+i,y-45+j+a,100+i,y-25+a);
   i=i+3;
   if(i>638)
      i=0;
   if(flag==1)
      j=j+2;
      q=q-2;
   if(j<=-10)
      flag=1;
   else if(j>=0)
      flag=0;
  line(0,450,645,450); //road
  line(500,440,550,440);
  ellipse(520,380,0,360,15,9);
  arc(505,410,90,270,30);
  arc(535,412,-90,90,30);
  circle(500,445,5);
  circle(520,445,6);
  circle(510,445,7);
  circle(525,445,5);
  circle(449,446,8);
  circle(530,445,5);
  circle(540,445,6);
  circle(345,40,50);
  line(490,420,550,420);
  line(530,420,550,420);
  line(480,430,542,430);
  line(548,430,550,430);
   }
  }
  getch();
  cleardevice();
  while(!kbhit())
  {
   line(0+370,y+20+146,0+370,y-20+146);
   line(0+370,y+20+146,20+370,y+146);
   line(0+370,y-20+146,20+370,y+146);
   ellipse(80+370,y+146,10-p+370,350+p+146,50,10);
   ellipse(80+370,y+146,10-p+370,350+p+146,40,10);
   ellipse(80+370,y+146,10-p+370,350+p+146,30,10);
   ellipse(80+370,y+146,10-p+370,350+p+146,20,10);
   ellipse(80+370,y+146,10-p+370,350+p+146,10,10);
   line(130+370,y-12+146,130+370,y+1+146);
   line(125+370,y-20+146,125+370,y-5+146);
   line(135+370,y-18+146,140+370,y+10+146);
   line(35+370,y+15+146,55+370,y+10+146);
   line(40+370,y+20+146,55+370,y+10+146);
   if(flag==0)
    p=p+2;
   if(flag==1)
    p=p-2;
   circle(130+370,y-18+146,6);
   circle(130+370,y-18+146,1);
   line(60+370,y-25+146,30+370,y-45+146);
   line(30+370,y-45+146,100+370,y-25+146);
   line(60+370,y+25+146,30+370,y+45+146);
  line(30+370,y+45+146,100+370,y+25+146);
   if(flag==1)
    j=j+2,q=q-2;
   if(j<=-10)
     flag=1;
    else if(j>=0)
     flag=0;
     delay(100) ;
     cleardevice();

   line(0,450,645,450);
   //road
   ellipse(520,380,0,360,15,9);
   arc(505,410,90,270,30);
   arc(535,412,-90,90,30);
   circle(500,445,5);
   circle(520,445,6);
   circle(510,445,7);
   circle(525,445,5);
   circle(449,446,8);
   circle(530,445,5);
   circle(540,445,6);
   line(490,420,550,420);
   line(530,420,550,420);
   line(480,430,542,430);
   line(548,430,550,430);
   circle(345,40,50);
 }
    getch();
    cleardevice();

   for(a=150;a<=195;a++)
   {
     line(0+330,y+20+a,0+330,y-20+a);
     line(0+330,y+20+a,20+330,y+a);
     line(0+330,y-20+a,20+330,y+a);
     ellipse(80+330,y+a,10-p+330,350+p+a,50,10);
     ellipse(80+330,y+a,10-p+330,350+p+a,40,10);
     ellipse(80+330,y+a,10-p+330,350+p+a,30,10);
     ellipse(80+330,y+a,10-p+330,350+p+a,20,10);
     ellipse(80+330,y+a,10-p+330,350+p+a,10,10);
     line(130+330,y-12+a,130+330,y+1+a);
     line(125+330,y-20+a,125+330,y-5+a);
     line(135+330,y-18+a,140+330,y+10+a);
     line(35+330,y+15+a,55+330,y+10+a);
     line(40+330,y+20+a,55+330,y+10+a);
     if(flag==0)
      p=p+2;
     if(flag==1)
      p=p-2;
     circle(130+330,y-18+a,6);
     circle(130+330,y-18+a,1);
     line(60+330,y-25+a,30+330,y-45+a+j);
     line(30+330,y-45+j+a,100+330,y-25+a);
     line(60+330,y+25+a,30+330,y+45+a);
     line(30+330,y+45+a,100+330,y+25+a);


	if(flag==1)
	 j=j+2,q=q+2;
	if(j<=-10)
	  flag=1;
	 else if(j>=0)
	  flag=0;
	delay(100);
	 cleardevice();
	 line(0,450,645,450); //road
	 ellipse(520,380,0,360,15,9);
	 arc(505,410,90,270,30);
	 arc(535,412,-90,90,30);
	 circle(520,445,6);
	 circle(510,445,7);
	 circle(525,445,5);
	 circle(449,446,8);
	 circle(530,445,5);
	 circle(540,445,6);
	 circle(473,445,6);
	 line(490,420,550,420);//water
	 line(530,420,550,420);
	 line(480,430,542,430);
	 line(548,430,550,430);
	 circle(345,40,50);
       }
       getch();
       cleardevice();
       while(!kbhit())
       {

	 line(0+330,y+20+195,0+330,y-20+195);
	  line(0+330,y+20+195,20+330,y+195);
	  ellipse(80+330,y+195,10-p,350+p+195,50,10);
      ellipse(80+330,y+195,10-p,350+p+195,40,10);
      ellipse(80+330,y+195,10-p,350+p+195,30,10);
      ellipse(80+330,y+195,10-p,350+p+195,20,10);
      ellipse(80+330,y+195,10-p,350+p+195,10,10);
      line(130+330,y-12+195,130+330,y+1+195);
      line(125+330,y-20+195,125+330,y-5+195);
      line(135+330,y-18+195,140+330,y+10+195);
      line(35+330,y+15+195,55+330,y+10+195);
      line(40+330,y+20+195,55+330,y+10+195);
      if(flag==0)
	p=p+2;
       if(flag==1)
	p=p-2;
      circle(130+330,y-18+195,6);
      circle(130+330,y-18+195,1);
      line(60+330,y-25+195,30+330,y-45+j+195);
      line(30+330,y-45+j+195,100+330,y-25+195);
      line(60+330,y+25+195,30+330,y+45+195);
      line(30+330,y+45+195,100+330,y+25+195);
      if(flag==1)
       j=j+2,q=q-2;
      if(j<=-10)
       flag=1;
      else if(j>=0)
       flag=0;
      delay(100);
      cleardevice();
    line(0,450,645,450); //road
    //pot
    ellipse(520,380,0,360,15,9);
    arc(505,410,90,270,30);
   arc(535,412,-90,90,30);
    circle(500,445,5);
    circle(520,445,6);
    circle(510,445,7);
    circle(525,445,5);
    circle(449,445,8);
    circle(530,445,5);
    circle(540,445,6);
    circle(495,445,5);
    circle(498,445,7);
    circle(473,445,6);
    line(490,420,550,420);
    line(530,420,550,420);
    line(480,430,542,430);
    line(548,430,550,430);
    circle(345,40,50);

}
getch();
cleardevice();
for(a=195;a>=150;a--)
{

   line(0+330,y+20+a,0+330,y-20+a);
   line(0+330,y+20+a,20+330,y+a);
   line(0+330,y-20+a,20+330,y+a);
   ellipse(80+330,y+a,10-p,350+p,50,10);
   ellipse(80+330,y+a,10-p,350+p,40,10);
   ellipse(80+330,y+a,10-p,350+p,30,10);
   ellipse(80+330,y+a,10-p,350+p,20,10);
   ellipse(80+330,y+a,10-p,350+p,10,10);
   line(130+330,y-12+a,130+330,y+1+a);
   line(125+330,y-20+a,125+330,y-5+a);
   line(135+330,y-18+a,140+330,y+10+a);
   circle(138+330,y-2 +a,4);
   line(35+330,y+15+a,55+330,y+10+a);
   line(40+330,y+20+a,55+330,y+10+a);
   if(flag==0)
     p=p+2;
   if(flag==1)
     p=p-2;
   circle(130+330,y-18+a,6);
   circle(130+330,y-18+a,1);
   line(60+330,y-25+a,30+330,y-45+j+a);
   line(30+330,y-45+j+a,100+330,y-25+a);
   line(60+330,y+25+a,30+330,y+45+a);
   line(30+330,y+45+a,100+330,y+25+a);
   if(flag==1)
      j=j+2,q=q-2;
   if(j<=-10)
       flag=1;
   else if(j>=0)
      flag=0;
   delay(100);
   cleardevice();
   line(0,450,645,450);
   ellipse(520,380,0,360,15,9);
   arc(505,410,90,270,30);
   arc(535,412,-90,90,30);
   circle(500,445,5);
   circle(520,445,6);
   circle(510,445,7);
   circle(525,445,5);
   circle(449,445,8);
   circle(530,445,5);
   circle(540,445,6);
   line(490,420,550,420);
   line(530,420,550,420);
   line(480,430,542,430);
   line(548,430,550,430);
   circle(345,40,50);
 }
 getch();
 cleardevice();
 while(!kbhit())
 {
   line(0+370,y+20+140,0+370,y-20+140);
   line(0+370,y+20+140,20+370,y+140);
   line(0+370,y+140-20,20+370,y+140);
   ellipse(80+370,y+140,10-p+370,350+p+140,50,10);
   ellipse(80+370,y+140,10-p+370,350+p+140,40,10);
   ellipse(80+370,y+140,10-p+370,350+p+140,30,10);
   ellipse(80+370,y+140,10-p+370,350+p+140,20,10);
   ellipse(80+370,y+140,10-p+370,350+p+140,10,10);
   line(130+370,y-12+140,130+370,y+1+140);
   line(125+370,y-20+140,125+370,y-5+140);
   line(135+370,y-18+140,140+370,y+10+140);
   circle(138+370,y-2+a,4);
   line(35+370,y+15+140,55+370,y+10+140);
   line(40+370,y+20+140,55+370,y+10+140);
     if(flag==0)
       p=p+2;
     if(flag==1)
       p=p-2;
   circle(130+370,y-18+140,6);
   circle(130+370,y-18+140,1);
   line(60+370,y-25+140,30+370,y-45+140);
   line(30+370,y-45+140,100+370,y-25+140);
   line(60+370,y+25+140,30+370,y+45+140);
   line(30+370,y+45+140,100+370,y+25+140);
    if(flag==1)
     j=j+2,q=q-2;
    if(j<=-10)
      flag=1;
    else if(j>=0)
      flag=0;
    delay(100);
    cleardevice();

    line(0,450,645,450);  //road
    ellipse(520,380,0,360,15,9);
    arc(505,410,90,270,30);
    arc(535,412,-90,90,30);
    circle(500,445,5);
    circle(520,445,6);
    circle(510,445,7);
    circle(525,445,5);
    circle(449,445,8);
    circle(530,445,5);
    circle(540,445,6);
    line(490,420,550,420);
    line(530,420,550,420);
    line(480,430,542,430);
    line(548,430,550,430);
    circle(345,40,50);
}
  getch();
  cleardevice();
  while(!kbhit())
  {
//    getch();
    line(0+370,y+20+140,0+370,y-20+140);
    line(0+370,y+20+140,20+370,y+140);
    line(0+370,y-20+140,20+370,y+140);
    ellipse(80+370,y+140,10-p+370,350+p+140,50,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,40,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,30,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,20,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,10,10);
    line(130+370,y-12+140,130+370,y+1+140);
    line(125+370,y-20+140,125+370,y-5+140);
    line(135+370,y-18+140,140+370,y+10+140);
    line(35+370,y+15+140,55+370,y+10+140);
    line(40+370,y+20+140,55+370,y+10+140);
     if(flag==0)
      p=p+2;
     if(flag==1)
      p=p-2;
     circle(130+370,y-18+140,6);
     circle(130+370,y-18+140,1);
     line(60+370,y-25+140,30+370,y-45+j+140);
     line(30+370,y-45+j+140,100+370,y-25+140);
     line(60+370,y+25+140,30+370,y+45+140);
     line(30+370,y+45+140,100+370,y+25+140);
       if(flag==1)
	j=j+2,q=q-2 ;
       if(j<=-10)
	flag=1;
       else if(j>=0)
	flag=0;
       delay(100);
       cleardevice();
       line(0,450,645,450); //road
       ellipse(520,380,0,360,15,9);
       arc(505,410,90,270,30);
       arc(535,412,-90,90,30);
       circle(500,445,5);
       circle(520,445,6);
       circle(510,445,7);
       circle(525,445,8);
       circle(449,445,8);
       circle(530,445,5);
       circle(540,445,6);
       circle(345,40,50);
       circle(526,435,6);
       line(490,415,553,415);
       line(510,420,550,420);
       line(480,430,542,430);
       line(548,430,550,430);
       line(530,420,550,420);
   }
    getch();
    cleardevice();
    for(a=150;a<=195;a++)
    {
      line(0+330,y+20+a,0+330,y-20+a);
      line(0+330,y+20+a,20+330,y+a);
      line(0+330,y-20+a,20+330,y+a);
      ellipse(80+330,y+a,10-p,350+p,50,10);
      ellipse(80+330,y+a,10-p,350+p,40,10);
      ellipse(80+330,y+a,10-p,350+p,30,10);
      ellipse(80+330,y+a,10-p,350+p,20,10);
      ellipse(80+330,y+a,10-p,350+p,10,10);
      line(130+330,y-12+a,130+330,y+1+a);
      line(125+330,y-20+a,125+330,y-5+a);
      line(135+330,y-18+a,140+330,y+10+a);
      line(35+330,y+15+a,55+330,y+10+a);
      line(40+330,y+20+a,55+330,y+10+a);
      if(flag==0)
       p=p+2;
      if(flag==1)
       p=p-2;
      circle(130+330,y-18+a,6);
      circle(130+330,y-18+a,1);
      line(60+330,y-25+a,30+330,y-45+j+a);
      line(30+330,y-45+a+j,100+330,y-25+a);
      line(60+330,y+25+a,30+330,y+45+a);
      line(30+330,y+45+a,100+330,y+25+a);
       if(flag==1)
	j=j+2,q=q-2;
       if(j<=-10)
       flag=-1;
       delay(100);
       cleardevice();
       line(0,450,645,450);
       ellipse(520,380,0,360,15,9);
       arc(505,410,90,270,30);
       arc(535,412,-90,90,30);
       circle(500,445,5);
       circle(520,445,6);
       circle(510,445,7);
       circle(525,445,5);
       circle(449,445,8);
       circle(530,445,5);
       circle(540,445,6);
       circle(473,445,6);
       line(490,415,553,415);
       line(510,420,550,420);
       line(530,420,550,420);
       line(480,430,542,430);
       line(548,430,550,430);
       circle(345,40,50);
       circle(526,435,6);
 }
  getch();
  cleardevice();
  while(!kbhit())
  {
    line(0+330,y+20+195,0+330,y-20+195);
    line(0+330,y+20+195,20+330,y+195);
    line(0+330,y-20+195,20+330,y+195);
    ellipse(80+330,y+195,10-p,350+p+195,50,10);
    ellipse(80+330,y+195,10-p,350+p+195,40,10);
    ellipse(80+330,y+195,10-p,350+p+195,30,10);
    ellipse(80+330,y+195,10-p,350+p+195,20,10);
    ellipse(80+330,y+195,10-p,350+p+195,10,10);
    line(130+330,y-12+195,130+330,y+1+195);
    line(125+330,y-20+195,125+330,y-5+195);
    line(135+330,y-18+195,140+330,y+10+195);
    line(35+330,y+15+195,55+330,y+10+195);
    line(40+330,y+20+195,55+330,y+10+195);
    if(flag==0)
     p=p+2;
    if(flag==1)
     p=p-2;
    circle(130+330,y-18+195,6);
    circle(130+330,y-18+195,1);
    line(60+330,y-25+195,30+330,y-45+j+195);
    line(30+330,y-45+j+195,100+330,y-25+195);
    line(60+330,y+25+195,30+330,y+45+195);
    line(30+330,y+45+195,100+330,y+25+195);
     if(flag==1)
      j=j+2,q=q-2;
     if(j<=-10)
      flag=1;
     else if(j>=0)
      flag=0;
     delay(100);
     cleardevice();
     line(0,450,645,450);//road
     ellipse(520,380,0,360,15,9);
     arc(505,410,90,270,30);
     arc(535,412,-90,90,30);
     circle(500,445,5);
     circle(520,445,6);
     circle(510,445,7);
     circle(525,445,5);
     circle(449,445,8);
     circle(530,445,5);
     circle(540,445,6);
     circle(495,445,5);
     circle(498,445,7);
     circle(473,445,6);
     line(490,415,553,415);
     line(510,420,550,420);
     line(530,420,550,420);
     line(480,430,542,430);
     line(548,430,550,430);
     circle(345,40,50);
     circle(526,435,6);
  }
   getch();
   cleardevice();
   for(a=195;a>=150;a--)
   {
     line(0+330,y+20+a,0+330,y-20+a);
     line(0+330,y+20+a,20+330,y+a);
     line(0+330,y-20+a,20+330,y+a);
     ellipse(80+330,y+a,10-p,350+p,50,10);
     ellipse(80+330,y+a,10-p,350+p,40,10);
     ellipse(80+330,y+a,10-p,350+p,30,10);
     ellipse(80+330,y+a,10-p,350+p,20,10);
     ellipse(80+330,y+a,10-p,350+p,10,10);
     line(130+330,y-12+a,130+330,y+1+a);
     line(125+330,y-20+a,125+330,y-5+a);
     line(135+330,y-18+a,140+330,y+10+a);
     circle(138+330,y-2+a,4);
     line(35+330,y+15+a,55+330,y+10+a);
     line(40+330,y+20+a,55+330,y+10+a);
     if(flag==0)
      p=p+2;
     if(flag==1)
      p=p-2;
     circle(130+330,y-18+a,6);
     circle(130+330,y-18+a,1);
     line(60+330,y-25+a,30+330,y-45+j+a);
     line(30+330,y-45+a+j,100+330,y-25+a);
     line(60+330,y+25+a,30+330,y+45+a);
     line(30+330,y+45+a,100+330,y+25+a);
     if(flag==1)
      j=j+2,q=q-2;
     if(j<=10)
       flag=1;
      else if(j>=0)
       flag=0;
      delay(100);
      cleardevice();
      line(0,450,645,450);
      ellipse(520,380,0,360,15,9);
      arc(505,410,90,270,30);
      arc(535,412,-90,90,30);
      circle(500,445,5);
      circle(520,445,6);
      circle(510,445,7);
      circle(525,445,5);
      circle(449,445,8);
      circle(530,445,5);
      circle(540,445,6);
      line(520,450,553,450);
      line(490,420,550,420);
      line(530,420,550,420);
      line(480,430,542,430);
      line(548,430,550,430);
      circle(345,40,50);
      circle(526,435,6);
}
   getch();
   cleardevice();
   while(!kbhit())
   {
     line(0+370,y+20+140,0+370,y-20+140);
     line(0+370,y+20+140,20+370,y+140);
     line(0+370,y-20+140,20+370,y+140);
     ellipse(80+370,y+140,10-p+370,350+p+140,50,10);
     ellipse(80+370,y+140,10-p+370,350+p+140,40,10);
     ellipse(80+370,y+140,10-p+370,350+p+140,30,10);
     ellipse(80+370,y+140,10-p+370,350+p+140,20,10);
     ellipse(80+370,y+140,10-p+370,350+p+140,10,10);
     line(130+370,y-12+140,130+370,y+1+140);
     line(125+370,y-20+140,125+370,y-5+140);
     line(135+370,y-18+140,140+370,y+10+140);
     line(35+370,y+15+140,55+370,y+10+140);
     line(40+370,y+20+140,55+370,y+10+140);
     if(flag==0)
      p=p+2;
     if(flag==1)
      p=p-2;
     circle(130+370,y-18+140,6);
     circle(130+370,y-18+140,1);
     line(60+370,y-25+140,30+370,y-45+j+140);
     line(30+370,y-45+j+140,100+370,y-25+140);
     line(60+370,y+25+140,30+370,y+45+j+140);
     line(30+370,y+45+j+140,100+370,y+25+140);
     if(flag==1)
      j=j+2,q=q-2;
     if(j<=-10)
      flag=1;
     else if(j>=0)
      flag=0;
      delay(100);
      cleardevice();
      line(0,450,645,450);//road
      ellipse(520,380,0,360,15,9);
      arc(505,410,90,270,30);
      arc(535,412,-90,90,30);
      circle(500,445,5);
      circle(520,445,6);
      circle(510,445,7);
      circle(525,445,8);
      circle(449,445,8);
      circle(530,445,5);
      circle(540,445,6);
      circle(520,435,5);
      circle(526,435,6);
      line(475,415,500,415);
      line(490,420,550,420);
      line(530,420,550,420);
      line(480,430,542,430);
      line(548,430,550,430);
      line(520,415,553,415);
      circle(345,40,50);
 }
 getch();
 cleardevice();
 while(!kbhit())
 {
    line(0+370,y+20+140,0+370,y-20+140);
    line(0+370,y+20+140,20+370,y+140);
    line(0+370,y-20+140,20+370,y+140);
    ellipse(80+370,y+140,10-p+370,350+p+140,50,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,40,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,30,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,20,10);
    ellipse(80+370,y+140,10-p+370,350+p+140,10,10);
    line(130+370,y-12+140,130+370,y+1+140);
    line(125+370,y-20+140,125+370,y-5+140);
    line(135+370,y-18+140,140+370,y+10+140);
    line(35+370,y+15+140,55+370,y+10+140);
    line(40+370,y+20+140,55+370,y+10+140);
    if(flag==0)
      p=p+2;
    if(flag==1)
      p=p-2;
    circle(130+370,y-18+140,6);
    circle(130+370,y-18+140,1);
    line(60+370,y-25+140,30+370,y-45+j+140);
    line(30+370,y-45+j+140,100+370,y-25+140);
    line(60+370,y+25+140,30+370,y+45+j+140);
    line(30+370,y+45+j+140,100+370,y+25+140);
    if(flag==1)
      q=q-2,j=j-2;
    if(j<=-10)
      flag=1;
    else if(j>=0)
      flag=0;
    delay(100);
    cleardevice();
    line(0,450,645,450);
    ellipse(520,380,0,360,15,9);
    arc(505,410,90,270,30);
    arc(535,412,-90,90,30);
    circle(500,445,5);
    circle(520,445,6);
    circle(510,445,7);
    circle(525,445,8);
    circle(449,445,8);
    circle(530,445,5);
    circle(540,445,6);
    circle(520,435,5);
    circle(526,435,6);
    circle(510,435,5);
    circle(515,435,5);
    line(480,405,557,405);
    line(485,410,520,410);
    line(530,410,553,410);
    line(475,415,500,415);
    line(520,415,553,415);
    line(510,420,550,420);
    line(530,420,550,420);
    line(480,430,542,430);
    line(548,430,550,430);
    line(480,400,557,400);
    line(486,394,555,394);
    circle(345,40,50);
 }
 getch();
 cleardevice();
     for(a=135;a>=50;a--)
     {

       line(0+i,y+20+a,0+i,y-20+a);
       line(0+i,y+20+a,20+i,y+a);
       line(0+i,y-20+a,20+i,y+a);
       ellipse(80+i,y+a,10-p,350+p+a,50,10);
       ellipse(80+i,y+a,10-p,350+p+a,40,10);
       ellipse(80+i,y+a,10-p,350+p+a,30,10);
       ellipse(80+i,y+a,10-p,350+p+a,20,10);
       ellipse(80+i,y+a,10-p,350+p+a,10,10);
       line(130+i,y-12+a,130+i,y+1+a);
       line(125+i,y-20+a,125+i,y-5+a);
       line(135+i,y-18+a,140+i,y+10+a);
       line(35+i,y+15+a,55+i,y+10+a);
       line(40+i,y+20+a,55+i,y+10+a);
       if(flag==0)
	p=p+2;
       if(flag==1)
	p=p-2;
       circle(130+i,y-18+a,6);
       circle(130+i,y-18+a,1);
       line(60+i,y-25+a,30+i,y-45+j+a);
       line(30+i,y-45+j+a,100+i,y-25+a);
       line(60+i,y+25+a,30+i,y+45+a);
       line(30+i,y+45+a,100+i,y+25+a);
	i=i+3;
	if(i>638)
	 i=0;
	if(flag==1)
	 j=j+2,q=q-2;
	if(j<=-10)
	 flag=1;
	else if(j>=0)
	 flag=0;

      delay(100);
      cleardevice();
    line(0,450,645,450);//road
    ellipse(520,380,0,360,15,9);
    arc(505,410,90,270,30);
    arc(535,412,-90,90,30);
    circle(500,445,5);
    circle(520,445,6);
    circle(510,445,7);
    circle(525,445,5);
    circle(449,445,8);
    circle(530,445,5);
    circle(540,445,6);
    line(480,430,542,430);
    line(548,430,550,430);
    line(490,415,553,415);
    circle(520,435,5);
    circle(526,435,6);
    circle(510,435,5);
    circle(515,435,5);
    }
    getch();
    cleardevice();
    settextstyle(3,0,3);
    outtextxy(140,150,"*****THANK YOU*****");
    getch();
    getch();

    closegraph();


  return 0;
}

